@model AssetManagement.WebUI.ViewModel.PCViewModel

@{
    ViewBag.Title = "Add PC";
}

<style>
    #urlddl {
        width: 18%;
        padding: 8px;
        text-align: justify;
        float: right;
    }

        #urlddl a {
            padding: 5px;
        }
</style>

<div style="margin-bottom:8%;"></div>

<div>
    @Html.DropDownList(
      "url", new SelectList(new[]
            {
               new SelectListItem { Text = "Keyboard", Value = Url.Action("Add", "Keyboard") },
               new SelectListItem { Text = "Laptop", Value = Url.Action("Add", "Laptop") },
               new SelectListItem { Text = "Monitor", Value = Url.Action("Add", "Monitor") },
               new SelectListItem { Text = "Mouse", Value = Url.Action("Add", "Mouse") },
               new SelectListItem { Text = "PC", Value = Url.Action("Add", "PC") },
               new SelectListItem { Text = "Printer", Value = Url.Action("Add", "Printer") },
             }, "Value", "Text"),
        "Choose asset...",
            new { id = "urlddl", @class = "btn btn-default" }
      )
</div>

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h3>Add PC</h3>
        <hr />
        @Html.ValidationSummary(true)
        
@if (@TempData["Success"] != null)
{
    <div class="alert alert-success">@TempData["Success"]</div>
}
@if (@ViewBag.Message != null)
{
    <div class="alert alert-danger">@ViewBag.Message</div>
}

<div style="margin-bottom:4%;"></div>
        <div class="form-group">
            @Html.LabelFor(model => model.serialNumber, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.serialNumber)
                @Html.ValidationMessageFor(model => model.serialNumber)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.manufacturer, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.manufacturer)
                @Html.ValidationMessageFor(model => model.manufacturer)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.warranty, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @{
                    List<SelectListItem> w = new List<SelectListItem>();

                    w.Add(new SelectListItem { Text = "6 months", Value = "6 months" });
                    w.Add(new SelectListItem { Text = "12 months", Value = "12 months" });
                    w.Add(new SelectListItem { Text = "18 months", Value = "18 months" });
                    w.Add(new SelectListItem { Text = "24 months", Value = "24 months" });
                }
                @Html.DropDownListFor(m => m.warranty, w, "Select...")
                @Html.ValidationMessageFor(model => model.warranty)
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.costprice, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.costprice)
                @Html.ValidationMessageFor(model => model.costprice)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.dateAdded, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.dateAdded)
                @Html.ValidationMessageFor(model => model.dateAdded)
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.modelName, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.modelName)
                @Html.ValidationMessageFor(model => model.modelName)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.OS, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @{
    List<SelectListItem> os = new List<SelectListItem>();

    os.Add(new SelectListItem { Text = "Windows 7", Value = "Windows 7" });
    os.Add(new SelectListItem { Text = "Windows 8", Value = "Windows 8" });
    os.Add(new SelectListItem { Text = "Windows 8.1", Value = "Windows 8.1" });
    os.Add(new SelectListItem { Text = "Windows 10", Value = "Windows 10" });
    os.Add(new SelectListItem { Text = "iOS", Value = "iOS" });
    os.Add(new SelectListItem { Text = "Linux", Value = "Linux" });
                }
                @Html.DropDownListFor(m => m.OS, os, "Select...")
                @Html.ValidationMessageFor(model => model.OS)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.RAM, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @{
    List<SelectListItem> ram = new List<SelectListItem>();

    ram.Add(new SelectListItem { Text = "1GB", Value = "1GB" });
    ram.Add(new SelectListItem { Text = "2GB", Value = "2GB" });
    ram.Add(new SelectListItem { Text = "4GB", Value = "4GB" });
    ram.Add(new SelectListItem { Text = "8GB", Value = "8GB" });
                }
                @Html.DropDownListFor(m => m.RAM, ram, "Select...")
                @Html.ValidationMessageFor(model => model.RAM)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.HDD, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @{
    List<SelectListItem> hdd = new List<SelectListItem>();

    hdd.Add(new SelectListItem { Text = "40GB", Value = "40GB" });
    hdd.Add(new SelectListItem { Text = "80GB", Value = "80GB" });
    hdd.Add(new SelectListItem { Text = "500GB", Value = "500GB" });
    hdd.Add(new SelectListItem { Text = "1TB", Value = "1TB" });
                }
                @Html.DropDownListFor(m => m.HDD, hdd, "Select...")
                @Html.ValidationMessageFor(model => model.HDD)
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Add PC" class="btn btn-primary" />
            </div>
        </div>
        <div>
            @Html.ActionLink("Cancel", "Index", "Asset", null, new { @class = "btn btn-default"})
        </div>
    </div>
}
<script type="text/javascript">
    $(function () {
        $('#urlddl').change(function () {
            var url = $(this).val();
            if (url != null && url != '') {
                window.location.href = url;
            }
        });
    });
</script>
@model AssetManagement.Business.HelpDeskSystem.TicketsByDevicesReport
    @{
        var allTickets = (ViewBag.AllTickets as AssetManagement.Business.HelpDeskSystem.TicketReportPerParticipant);
    }
<script src="~/Scripts/Chart.bundle.js"></script>
<div class="container-fluid">
    <div class="col-lg-6 col-md-2 well">
        <canvas id="canvas"></canvas>
    </div>
    <div class="col-lg-6 col-md-2 well">
        <canvas id="mycanvas"></canvas>
    </div>
</div>
<style>
    /*div{
        color:rgb(255, 255, 255)
    }*/
</style>
<script>
    var opened = parseInt('@allTickets.Opened.Count');
    var UnAcknowlaged = parseInt('@allTickets.UnAcknowlaged.Count');
    var Closed = parseInt('@allTickets.Completed.Count')
    var overdue = parseInt('@allTickets.OverDue.Count')

    var laptop = parseInt(@Model.LaptopTickets)
    var printer = parseInt(@Model.PrinterTickets)
    var PCBox = parseInt(@Model.PCTickets)
    var Monitor = parseInt(@Model.MonitorTickets)
    var Mouse = parseInt(@Model.MouseTickets)
    var Keyboard = parseInt(@Model.KeyboardTickets)
    var labelOpened = 'Opened';
    var MONTHS = ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"];
    var ticketsFilterData = {
        labels: [
            labelOpened,
            "UnAcknowlaged",
            "Completed",
            "OverDue"
        ],
        datasets: [
            {
                data: [opened, UnAcknowlaged, Closed,overdue],
                backgroundColor: [
                    "#b792da",
                    "#bed2d9",
                    "#6990d8"
                ],
                hoverBackgroundColor: [
                    "#FF6384",
                    "#bf8fa9",
                    "#FFCE56"
                ]
            }]
    };

    //var assetsFiterData = {
    //    labels: [
    //        "Laptop",
    //        "Printer",
    //        "PC",
    //        "Keyboard",
    //        "Mouse",
    //        "Monitor"
    //    ],
    //    datasets: [
    //        {
    //            data: [opened, UnAcknowlaged, Closed],
    //            backgroundColor: [
    //                "#b792da",
    //                "#bed2d9",
    //                "#6990d8"
    //            ],
    //            hoverBackgroundColor: [
    //                "#FF6384",
    //                "#bf8fa9",
    //                "#FFCE56"
    //            ]
    //        }]
    //};
    window.onload = function () {
        var ctx = document.getElementById("canvas").getContext("2d");
        window.myBar = new Chart(ctx, {
            type: 'doughnut',
            data: ticketsFilterData,
            options: {
                // Elements options apply to all of the options unless overridden in a dataset
                // In this case, we are setting the border of each bar to be 2px wide and green
                elements: {
                    rectangle: {
                        borderWidth: 2,
                        borderColor: 'rgb(0, 255, 0)',
                        borderSkipped: 'bottom'
                    }
                },
                responsive: true,
                legend: {
                    position: 'right',
                },
                title: {
                    display: true,
                    text: 'Tickets'
                }
            }
        });
    };
</script>
<script>
    var ctx = document.getElementById("mycanvas");
    var myChart = new Chart(ctx, {
        type: 'bar',
        data: {
            labels: [
                "Laptop",
                "Printer",
                "PC",
                "Keyboard",
                "Mouse",
                "Monitor"
            ],
            datasets: [{
                label: 'Tickets By Devices',
                data: [laptop, printer, PCBox, Keyboard, Mouse, Monitor],
                backgroundColor: [
                    'rgba(49, 121, 185, 0.60)',
                    'rgba(54, 162, 235, 0.22)',
                    'rgba(255, 206, 86, 0.32)',
                    'rgba(75, 192, 192, 0.52)',
                    'rgba(153, 102, 255, 0.22)',
                    'rgba(255, 159, 64, 0.62)'
                ],
                borderColor: [
                    'rgb(255, 255, 255)',
                    'rgba(54, 162, 235, 0.60)',
                    'rgba(255, 206, 86, 1)',
                    'rgba(75, 192, 192, 1)',
                    'rgba(153, 102, 255, 1)',
                    'rgba(255, 159, 64, 1)'
                ],
                pointBorderColor: "rgba(3, 88, 106, 0.80)",
                pointBackgroundColor: "rgba(3, 88, 106, 0.80)",
                pointHoverBackgroundColor: "#fff",
                pointHoverBorderColor: "rgba(220,220,220,1)",
                borderWidth: 1
            }]
        },
        options: {
            scales: {
                yAxes: [{
                    ticks: {
                        beginAtZero: true
                    }
                }]
            }
        }
    });
</script>